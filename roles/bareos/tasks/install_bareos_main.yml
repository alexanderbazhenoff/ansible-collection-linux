---
- name: "install bareos main | Set fact for repository linux distribution major version"
  ansible.builtin.set_fact:
    linux_distro_major_version: >-
      {% if override_ansible_distribution_major_version is defined and override_ansible_distribution_major_version is
      not none and override_ansible_distribution_major_version | string | length > 0 -%}
      {{ override_ansible_distribution_major_version }}{% else %}{{ ansible_distribution_major_version }}{% endif %}

- name: "install bareos main | Install pre-requirements"
  ansible.builtin.include_tasks: install_pre_requirements.yml

- name: "install bareos main | Include add Bareos repo tasks"
  ansible.builtin.include_tasks: add_bareos_repo_{{ ansible_os_family | lower }}.yml
  when: ansible_os_family != 'Alpine'

- name: "install bareos main | Include install php requirements tasks"
  ansible.builtin.include_tasks: install_php_requirements_redhat.yml
  when: ansible_os_family == 'RedHat' and bareos_components | regex_search('webui')

- name: "install bareos main | Install packages depending on components to install and additional packages list"
  ansible.builtin.package:
    name: "{{ item }}"
  when: item is defined and item is not none and item | length > 0
  register: bareos_pkgs_results
  until: bareos_pkgs_results is succeeded
  retries: 5
  delay: 5
  with_items:
    - "{{ bareos_packages | json_query(bareos_components) + install_additional_bareos_packages }}"
  notify:
    - bareos daemons restart

- name: "install bareos main | Copy missing directors.ini and configuration.ini config (Debian)"
  ansible.builtin.template:
    src: "{{ item.source }}"
    dest: "{{ item.destination }}"
    mode: 0644
  with_items:
    - { source: directors.ini, destination: /etc/bareos-webui/directors.ini }
    - {
        source: configuration.ini,
        destination: /etc/bareos-webui/configuration.ini,
      }
  when: ansible_os_family == 'Debian' and bareos_components == 'dir_webui'

- name: "install bareos main | Set facts for firewall rule(s)"
  ansible.builtin.set_fact:
    firewalld_rules_state: enabled
    ufw_rules_state: allow

- name: "install bareos main | Include firewall control tasks to enable connection(s)"
  ansible.builtin.include_tasks: firewall_control.yml
  when: firewall_control and role_action == 'install'

# (To avoid python interpreter redefine it was done without ansible.posix.seboolean module)
- name: "install bareos main | Enable httpd connect if selinux is enabled"
  ansible.builtin.command:
    cmd: setsebool -P httpd_can_network_connect on
  register: setsebool_results
  changed_when: not setsebool_results.failed
  when:
    bareos_components | regex_search('webui') and ansible_facts.selinux.status is defined and
    ansible_facts.selinux.status == 'enabled' and ansible_os_family == 'RedHat'

- name: "install bareos main | Create Bareos database, make Bareos tables, grant privileges"
  ansible.builtin.shell: |
    su {{ postgresql_become_user }} -c 'cd {{ bareos_scripts_path | json_query(ansible_os_family | lower) }}; \
      ./create_bareos_database; ./make_bareos_tables; ./grant_bareos_privileges'
  register: pgsql_user_and_database_create_and_grant_results
  changed_when: not pgsql_user_and_database_create_and_grant_results.failed
  when: bareos_components | regex_search('dir') and init_bareos_database

- name: "install bareos main | Include enable start Bareos tasks"
  ansible.builtin.include_tasks: enable_start_bareos_{{ ansible_os_family | lower }}.yml
  when: ansible_os_family != 'Debian'
