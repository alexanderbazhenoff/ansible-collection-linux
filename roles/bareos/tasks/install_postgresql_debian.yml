---
- name: "install postgresql debian | Check required repo URL is available"
  ansible.builtin.uri:
    url:
      "{{ postgresql_debian_apt_repo_url_prefix }}/dists/{{ ansible_distribution_release -}}
      -pgdg/{{ postgresql_version | default('') }}/"
  register: check_repo_url_results
  ignore_errors: true
  failed_when: check_repo_url_results.status == 404

- name: "install postgresql debian | Assert availability of postgresql version repo"
  ansible.builtin.assert:
    that:
      - not check_repo_url_results.failed
    fail_msg: >-
      {{ postgresql_debian_apt_repo_url_prefix }}{{ ansible_distribution_release }}-pgdg/{{ postgresql_version }}/ is
      not available for your Linux distribution in repositories. Try to change version in 'postgresql_version' role
      variable or install PostgreSQL server manually.

- name: "install postgresql debian | Create folder for keyring"
  ansible.builtin.file:
    path: "{{ postgresql_debian_keys_dir }}"
    state: directory
    mode: 0755

- name: "install postgresql debian | Install package signing key"
  ansible.builtin.get_url:
    url: "{{ postgresql_debian_key_url }}"
    dest: "{{ postgresql_debian_key_destination }}"
    mode: 0755
    validate_certs: false
  register: postgresql_apt_key_results
  until: postgresql_apt_key_results is succeeded
  retries: 5
  delay: 5

- name: "install postgresql debian | Install debian repository"
  ansible.builtin.apt_repository:
    repo: "{{ postgresql_debian_repo }}"
    update_cache: true

- name: "install postgresql debian | Install postgresql server packages"
  ansible.builtin.apt:
    name: "{{ item }}"
  when: item is defined and item is not none and item | length > 0
  with_items:
    - "{{ postgresql_packages |
      json_query((ansible_os_family | lower) + (install_psycopg2 | ternary('_psycopg2', ''))) }}"
  register: postgresql_apt_results
  until: postgresql_apt_results is succeeded
  retries: 5
  delay: 5
