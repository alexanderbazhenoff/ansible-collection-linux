---

- name: "main | Set fact for lxc pre-requirements packages"
  ansible.builtin.set_fact:
    lxc_install_packages:
      - "{% if ansible_os_family == 'Alpine' %}xz{% endif %}"
      - "{% if ansible_os_family == 'Alpine' %}linux-firmware-any{% endif %}"
      - gnupg
      - "{% if ansible_os_family == 'Alpine' and use_lxc_default_net %}iptables{% endif %}"
      - "{% if ansible_distribution_major_version | int >= 7 and ansible_os_family == 'RedHat' -%}
        {% if not ansible_distribution | regex_search('OracleLinux|Fedora') %}epel-release{% elif ansible_distribution |
        regex_search('OracleLinux') %}oracle-epel-release-el{{ ansible_distribution_major_version }}{% endif -%}
        {% endif %}"

- name: "main | Upgrade apt package cache"
  ansible.builtin.apt:
    update_cache: true
  when: ansible_pkg_mgr == 'apt'

- name: "main | Install packages tasks (pre-requirements install)"
  ansible.builtin.include_tasks: install_packages.yml
  when: role_action == 'install'

- name: "main | Set fact for lxc version override"
  ansible.builtin.set_fact:
    lxc_version: >-
      {% if lxc_version_override | json_query((ansible_os_family | lower) + ansible_distribution_major_version) is not
      none %}{{ lxc_version_override | json_query((ansible_os_family | lower) + ansible_distribution_major_version) -}}
      {% else %}{{ lxc_version }}{% endif %}

- name: "main | Set fact for lxc technology override"
  ansible.builtin.set_fact:
    lxc_technology: "{% if lxc_version == '2.0' %}lxc{% else %}{{ lxc_technology }}{% endif %}"

- name: "main | Set fact for lxc packages"
  ansible.builtin.set_fact:
    lxc_install_packages: >-
      {% if ansible_os_family | regex_search('RedHat|Alpine') %}{{ lxc_packages | json_query(ansible_os_family |
      lower) }}{% elif ansible_distribution | regex_search('Debian|Ubuntu') -%}
      {{ lxc_packages | json_query(ansible_distribution | lower) }}{% endif %}

- name: "main | Check firewalld is running"   # noqa command-instead-of-module
  ansible.builtin.shell: systemctl is-active firewalld || true
  register: firewalld_state
  changed_when: false

- name: "main | Check ufw status"
  ansible.builtin.shell: ufw status || true
  register: ufw_state
  changed_when: false

- name: "main | Include {{ role_action }} tasks"
  ansible.builtin.include_tasks: "{{ role_action }}.yml"
