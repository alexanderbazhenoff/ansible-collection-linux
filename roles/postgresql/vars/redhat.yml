---
postgresql_repo_settings:
  redhat7: pgdg{{ postgresql_version }},base,epel
  redhat6: pgdg{{ postgresql_version }},base,vault

postgresql_packages:
  - package: >-
      {% if ansible_distribution_major_version | int >= 7 %}{% if not ansible_distribution |
      regex_search('OracleLinux|Fedora') %}epel-release{% elif ansible_distribution | regex_search('OracleLinux') -%}
      oracle-epel-release-el{{ ansible_distribution_major_version }}{% endif %}{% endif %}
  - package: >-
      {% if postgresql_version is defined and postgresql_version is not none and postgresql_version | string |
      length > 0 %}{{ postgresql_url }}repos/yum/reporpms/{% if ansible_distribution == 'Fedora' %}F{% else -%}
      EL{% endif %}-{{ ansible_distribution_major_version }}-{{ ansible_architecture -}}
      /pgdg-{% if ansible_distribution == 'Fedora' %}fedora{% else %}redhat{% endif %}-repo-latest.noarch.rpm{% endif %}
    package_name_short: pgdg-{% if ansible_distribution == 'Fedora' %}fedora{% else %}redhat{% endif %}-repo
    disable_gpg_check: True
  - package: >-
      {% if install_psycopg2 %}python{% if ansible_python_version is version('2.7.5', '>=') and
      ansible_distribution_major_version | int >= 7 %}{{ ansible_python.version.major }}{% endif %}-psycopg2{% endif %}
  - package: postgresql{% if postgresql_version | int > 0 %}{{ postgresql_version | default('') }}{% endif %}-server

pgadmin_packages:
  - package: >-
      {{ postgresql_url }}pgadmin/pgadmin4/yum/pgadmin4-{% if ansible_distribution == 'Fedora' %}fedora{% else -%}
      redhat{% endif %}-repo-2-1.noarch.rpm
    package_name_short: pgadmin4-{% if ansible_distribution == 'Fedora' %}fedora{% else %}redhat{% endif %}-repo
    disable_gpg_check: True
  - package:
      pgadmin4{% if pgadmin_installation_type is defined and pgadmin_installation_type is not none and
      pgadmin_installation_type | length > 0 %}-{% if pgadmin_installation_type == 'web' %}web{% else -%}
      desktop{% endif %}{% endif -%}

postgresql_data_path:
  /var/lib/pgsql/{% if not (postgresql_version_regex is defined and postgresql_version_regex |
  length > 0) %}{{ postgresql_version }}/{% endif %}data

hba_conf_path_alternative_cmd: >-
  su - {{ postgresql_become_user }} -c 'printf "%s/pg_hba.conf" "$PGDATA"'

postgresql_conf_path_alternative_cmd: >-
  printf "%s/postgresql.conf" "$(su - {{ postgresql_become_user }} -c 'printf $PGDATA')"

check_postgresql_packages_cmd: rpm -qa | grep postgresql || true

pgadmin_init_cmd: |
  /usr/pgadmin4/bin/setup-web.sh --yes
  chcon -t httpd_sys_rw_content_t /var/log/pgadmin -R
  chcon -t httpd_sys_rw_content_t /var/lib/pgadmin -R

pgadmin_data_folders:
  - /var/lib/pgadmin
  - /var/log/pgadmin
