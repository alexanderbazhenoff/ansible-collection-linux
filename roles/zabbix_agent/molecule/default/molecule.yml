---
dependency:
  name: galaxy
  options:
    ignore-certs: true
    ignore-errors: true
driver:
  name: docker
platforms:
  # Uncomment if you wish to test it on:
  #  - name: debian11-instance
  #    image: jrei/systemd-debian:11
  #    dockerfile: dockerfile_debian.j2
  #    buildargs:
  #      image_platform: jrei/systemd-debian
  #      image_tag: 11
  #    pre_build_image: false
  #    privileged: true
  #    tmpfs:
  #      - /run
  #      - /tmp
  #      - /run/lock
  #    volumes:
  #      - "/sys/fs/cgroup:/sys/fs/cgroup:rw"
  #    capabilities:
  #      - SYS_ADMIN
  #    command: "/lib/systemd/systemd"
  #
  #  - name: debian12-instance
  #    image: jrei/systemd-debian:12
  #    dockerfile: dockerfile_debian.j2
  #    buildargs:
  #      image_platform: jrei/systemd-debian
  #      image_tag: 12
  #    pre_build_image: false
  #    privileged: true
  #    tmpfs:
  #      - /run
  #      - /tmp
  #      - /run/lock
  #    volumes:
  #      - "/sys/fs/cgroup:/sys/fs/cgroup:rw"
  #    capabilities:
  #      - SYS_ADMIN
  #    command: "/lib/systemd/systemd"

  - name: ubuntu1604-instance
    image: jrei/systemd-ubuntu:16.04
    dockerfile: dockerfile_debian.j2
    buildargs:
      image_platform: jrei/systemd-ubuntu
      image_tag: 16.04
    pre_build_image: false
    privileged: true
    tmpfs:
      - /run
      - /tmp
      - /run/lock
    volumes:
      - "/sys/fs/cgroup:/sys/fs/cgroup:rw"
    capabilities:
      - SYS_ADMIN
    command: "/lib/systemd/systemd"

  - name: ubuntu1804-instance
    image: jrei/systemd-ubuntu:18.04
    dockerfile: dockerfile_debian.j2
    buildargs:
      image_platform: jrei/systemd-ubuntu
      image_tag: 18.04
    pre_build_image: false
    privileged: true
    tmpfs:
      - /run
      - /tmp
      - /run/lock
    volumes:
      - "/sys/fs/cgroup:/sys/fs/cgroup:rw"
    capabilities:
      - SYS_ADMIN
    command: "/lib/systemd/systemd"

  - name: ubuntu2004-instance
    image: jrei/systemd-ubuntu:20.04
    dockerfile: dockerfile_debian.j2
    buildargs:
      image_platform: jrei/systemd-ubuntu
      image_tag: 20.04
    pre_build_image: false
    privileged: true
    tmpfs:
      - /run
      - /tmp
      - /run/lock
    volumes:
      - "/sys/fs/cgroup:/sys/fs/cgroup:ro"
    capabilities:
      - SYS_ADMIN
    command: "/lib/systemd/systemd"

  # Uncomment if you wish to test it on:
  #  - name: ubuntu2204-instance
  #    image: jrei/systemd-ubuntu:22.04
  #    dockerfile: dockerfile_debian.j2
  #    buildargs:
  #      image_platform: jrei/systemd-ubuntu
  #      image_tag: 22.04
  #    pre_build_image: false
  #    privileged: true
  #    tmpfs:
  #      - /run
  #      - /tmp
  #      - /run/lock
  #    volumes:
  #      - "/sys/fs/cgroup:/sys/fs/cgroup:rw"
  #    capabilities:
  #      - SYS_ADMIN
  #    command: "/lib/systemd/systemd"

  # Uncomment if you wish to test it on:
  #  - name: oraclelinux8-instance
  #    image: oraclelinux:8
  #    dockerfile: dockerfile_redhat.j2
  #    buildargs:
  #      image_platform: oraclelinux
  #      image_tag: 8
  #    pre_build_image: false
  #    privileged: true
  #    tmpfs:
  #      - /run
  #      - /tmp
  #    volumes:
  #      - "/sys/fs/cgroup:/sys/fs/cgroup:rw"
  #    capabilities:
  #      - SYS_ADMIN
  #    command: "/lib/systemd/systemd"

  - name: oraclelinux9-instance
    image: oraclelinux:9
    dockerfile: dockerfile_redhat.j2
    buildargs:
      image_platform: oraclelinux
      image_tag: 9
    pre_build_image: false
    privileged: true
    tmpfs:
      - /run
      - /tmp
    volumes:
      - "/sys/fs/cgroup:/sys/fs/cgroup:rw"
    capabilities:
      - SYS_ADMIN
    command: "/lib/systemd/systemd"

  - name: alpine-latest-instance
    image: alpine:latest
    dockerfile: dockerfile_alpine.j2
    buildargs:
      image_platform: alpine
      image_tag: latest
    pre_build_image: false
    privileged: true
    tmpfs:
      - /run
      - /tmp
    volumes:
      - "/sys/fs/cgroup:/sys/fs/cgroup:rw"
    capabilities:
      - SYS_ADMIN
    command: "/sbin/init"

scenario:
  test_sequence:
    - dependency
    - lint
    - destroy
    - syntax
    - create
    - converge
    - verify
    - side_effect
    - destroy
provisioner:
  name: ansible
  env:
    PY_COLORS: "1"
    ANSIBLE_FORCE_COLOR: "1"
lint: |
  export ANSIBLE_ROLES_PATH=${MOLECULE_PROJECT_DIRECTORY}/..
  export PY_COLORS=1
  export ANSIBLE_FORCE_COLOR=1
  yamllint .
  ansible-lint .
  flake8 .
verifier:
  name: ansible
